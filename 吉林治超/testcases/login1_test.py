# NOTE: Generated By HttpRunner v3.1.6
# FROM: testcases\login1.yml


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseLogin1(HttpRunner):

    config = (
        Config("系统登录")
        .variables(
            **{"user_code": "ccuser3", "password": "666666", "user_name": "长春测试三"}
        )
        .base_url("http://10.168.1.180:80")
        .export(*["authToken", "userCode", "userName"])
    )

    teststeps = [
        Step(
            RunRequest("获取验证码")
            .get("/serv/sysrest/sys/encrypt/verifyCode")
            .with_params(**{"_": "1652845062414"})
            .with_headers(
                **{
                    "User-Agent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36",
                    "X-Requested-With": "XMLHttpRequest",
                    "instanceFlag": "",
                }
            )
            .extract()
            .with_jmespath("body.data.code", "verifyCode")
            .with_jmespath("body.data.key", "verifyKey")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "text/plain;charset=UTF-8")
            .assert_equal("body.code", 1)
            .assert_equal("body.desc", "success")
        ),
        Step(
            RunRequest("获取公钥")
            .get("/serv/sysrest/sys/encrypt/publicKey")
            .with_params(**{"_": "1652845062416"})
            .with_headers(
                **{
                    "User-Agent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36",
                    "X-Requested-With": "XMLHttpRequest",
                    "instanceFlag": "",
                    "opUser": "null",
                }
            )
            .extract()
            .with_jmespath("body.data.key", "key")
            .with_jmespath("body.data.publicKey", "publicKey")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "text/plain;charset=UTF-8")
            .assert_equal("body.code", 1)
            .assert_equal("body.desc", "success")
        ),
        Step(
            RunRequest("登录")
            .get("/serv/sysrest/sys/user/login")
            .with_params(
                **{
                    "_": "1652845062417",
                    "data": '{"userCode":"$user_code","passwd":"${sm2_password($password, $publicKey)}","key":"$key","verifyCode":"$verifyCode","verifyKey":"$verifyKey"}',
                }
            )
            .with_headers(
                **{
                    "User-Agent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36",
                    "X-Requested-With": "XMLHttpRequest",
                    "instanceFlag": "",
                }
            )
            .extract()
            .with_jmespath("body.data.authToken", "authToken")
            .with_jmespath("body.data.userCode", "userCode")
            .with_jmespath("body.data.userName", "userName")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "text/plain;charset=UTF-8")
            .assert_equal("body.code", 1)
            .assert_equal("body.desc", "success")
            .assert_equal("body.data.userCode", "$user_code")
            .assert_equal("body.data.userName", "$user_name")
        ),
    ]


if __name__ == "__main__":
    TestCaseLogin1().test_start()
